name: CMake Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Debug, Release ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            build_type: Debug
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up Conan
        run: pip3 install conan

      - name: Create Conan profile
        run: conan profile detect

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DBUILD_DOC=ON
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Doxygen
        if: matrix.build_type == 'Release' && matrix.os == 'ubuntu-latest'
        run: |
          doxygen Doxyfile
          cd ${{ steps.strings.outputs.build-output-dir }}/latex
          make

      - name: Package build
        if: matrix.build_type == 'Release' && matrix.os == 'ubuntu-latest'
        run: |
          cd ${{ steps.strings.outputs.build-output-dir }}
          cpack --config CPackConfig.cmake

      - name: Upload build artifacts
        if: matrix.build_type == 'Release' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: modern-${{ matrix.os }}
          path: |
            ${{ steps.strings.outputs.build-output-dir }}/packages/*.deb
            ${{ steps.strings.outputs.build-output-dir }}/latex/refman.pdf
